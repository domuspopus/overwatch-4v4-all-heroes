settings
{
	main
	{
		Mode Name: "4v4 ALL (John edit)"
	}

	lobby
	{
		Allow Players Who Are In Queue: Yes
		Map Rotation: Paused
		Match Voice Chat: Enabled
		Max Team 1 Players: 4
		Max Team 2 Players: 4
		Return To Lobby: Never
		Swap Teams After Match: No
		Team Balancing: After A Game
	}

	modes
	{
		Elimination
		{
			enabled maps
			{
				Workshop Island Night 0
			}
		}

		General
		{
			Allow Hero Switching: Off
			Capture Objective Tiebreaker: Off
			Game Mode Start: Immediately
			Hero Selection: Limited
			Respawn As Random Hero: On
			Respawn Time Scalar: 0%
		}
	}

	heroes
	{
		General
		{
			Ability Cooldown Time: 25%
			Spawn With Ultimate Ready: On
			Ultimate Generation: 280%
			Ultimate Generation - Combat: 137%

			Ana
			{
				Ultimate Generation - Combat Nano Boost: 20%
				Ultimate Generation - Passive Nano Boost: 20%
				Ultimate Generation Nano Boost: 20%
			}

			Cassidy
			{
				Ultimate Generation - Combat Deadeye: 200%
				Ultimate Generation - Passive Deadeye: 10%
			}

			D.Va
			{
				Self Destruct Knockback Scalar: 200%
				Ultimate Generation - Combat Self-Destruct: 0%
				Ultimate Generation - Passive Self-Destruct: 0%
				Ultimate Generation Self-Destruct: 10%
			}

			Genji
			{
				Ultimate Generation - Combat Dragonblade: 20%
				Ultimate Generation - Passive Dragonblade: 20%
				Ultimate Generation Dragonblade: 20%
			}

			Reinhardt
			{
				Ultimate Generation - Passive Earthshatter: 300%
			}

			Zarya
			{
				Health: 35%
			}

			Wrecking Ball
			{
				Health: 40%
			}

			Moira
			{
				Spawn With Ultimate Ready: Off
			}

			// enabled heroes
			// {
			// 	Moira
			// }
		}
	}
}

variables
{
	global:
		0: MatchStartTrigger
		1: DamageAddTeam2
		2: MaxHPAdd
		3: DamageAdd
		4: StartingTrigger
		5: RoundTrigger
		6: HPTriggerTeam1
		7: HPTriggerTeam2
		8: MaxHPOfTeam2
		9: MaxHPOfTeam1
		10: DamageAddTeam1
}

subroutines
{
	0: StopShooting
}

rule("Set global variables")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.MaxHPAdd = 20;
		Global.DamageAdd = 50;
		Global.MatchStartTrigger = True;
		Disable Built-In Game Mode Announcer;
		disabled Create Dummy Bot(Hero(Roadhog), Team 1, 1, Vector(0, 0, 0), Vector(0, 0, 0));
		disabled Create Dummy Bot(Hero(Zenyatta), Team 2, 2, Vector(0, 0, 0), Vector(0, 0, 0));
		disabled Create Dummy Bot(Hero(Widowmaker), Team 2, 3, Vector(0, 0, 0), Vector(0, 0, 0));
		disabled Create Dummy Bot(Hero(Symmetra), Team 2, 4, Vector(0, 0, 0), Vector(0, 0, 0));
	}
}

disabled rule("Debug dummy bot behaviour")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
		Is Game In Progress == True;
	}

	actions
	{
		Start Holding Button(Event Player, Button(Primary Fire));
	}
}

rule("Set global trigger variables")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		"Scoreboard"
		Is Game In Progress == True;
		Global.StartingTrigger != True;
	}

	actions
	{
		Global.StartingTrigger = True;
		Global.RoundTrigger = True;
	}
}

rule("Skip hero select")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Assembling Heroes == True;
	}

	actions
	{
		Set Match Time(0);
	}
}

rule("Set triggers on round end, reset score")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		(Team Score(Team 1) > 0 || Team Score(Team 2) > 0) == True;
	}

	actions
	{
		Set Team Score(All Teams, 0);
		Global.RoundTrigger = True;
	}
}

rule("Disable shooting on round start")
{
	event
	{
		Subroutine;
		StopShooting;
	}

	actions
	{
		Disallow Button(All Players(All Teams), Button(Primary Fire));
		Wait(0.300, Ignore Condition);
		Allow Button(All Players(All Teams), Button(Primary Fire));
	}
}

rule("Auto balance: set hp and damage difference general")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		((Global.RoundTrigger && !Is Between Rounds) || Global.MatchStartTrigger) == True;
	}

	actions
	{
		disabled Big Message(All Players(All Teams), Custom String("BALANCE START"));
		Global.MatchStartTrigger = False;
		Global.RoundTrigger = False;
		Global.HPTriggerTeam1 = True;
		Global.HPTriggerTeam2 = True;
		"0 or player difference"
		Global.MaxHPOfTeam2 = Global.MaxHPAdd * Max(Number Of Players(Team 1) - Number Of Players(Team 2), 0);
		"0 or player difference"
		Global.MaxHPOfTeam1 = Global.MaxHPAdd * Max(Number Of Players(Team 2) - Number Of Players(Team 1), 0);
		"0 or player difference"
		Global.DamageAddTeam2 = Global.DamageAdd * Max(Number Of Players(Team 1) - Number Of Players(Team 2), 0);
		"0 or player difference"
		Global.DamageAddTeam1 = Global.DamageAdd * Max(Number Of Players(Team 2) - Number Of Players(Team 1), 0);
		Call Subroutine(StopShooting);
		disabled Big Message(All Players(All Teams), Custom String("BALANCE END"));
	}
}

rule("Auto balance: set hp and damage of team 1")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Global.HPTriggerTeam1 == True;
		Is Between Rounds == False;
	}

	actions
	{
		disabled Small Message(All Players(All Teams), Custom String("ballance1"));
		Global.HPTriggerTeam1 = False;
		Set Max Health(Event Player, 100 + Global.MaxHPOfTeam1);
		Set Damage Dealt(Event Player, 100 + Global.DamageAddTeam1);
		If(Global.MaxHPOfTeam1 > 0);
			Small Message(All Players(All Teams), Custom String("Team 1 Powered up!"));
	}
}

rule("Auto balance: set hp and damage of team 2")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Global.HPTriggerTeam2 == True;
		Is Between Rounds == False;
	}

	actions
	{
		disabled Small Message(All Players(All Teams), Custom String("ballance2"));
		Global.HPTriggerTeam2 = False;
		Set Max Health(Event Player, 100 + Global.MaxHPOfTeam2);
		Set Damage Dealt(Event Player, 100 + Global.DamageAddTeam2);
		If(Global.MaxHPOfTeam2 > 0);
			Small Message(All Players(All Teams), Custom String("Team 2 Powered up!"));
	}
}

rule("Hero: Ana (self ult)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ultimate)) == True;
		Ultimate Charge Percent(Event Player) == 100;
		Hero Of(Event Player) == Hero(Ana);
		Is Dummy Bot(Event Player) == False;
	}

	actions
	{
		Set Ultimate Charge(Event Player, 0);
		Create Dummy Bot(Hero(Ana), Team Of(Event Player), 10, Vector(0, 0, 0), Vector(0, 0, 0));
		Start Forcing Dummy Bot Name(Players In Slot(10, Team Of(Event Player)), Custom String("Ana Apparition"));
		Start Forcing Player Position(Players In Slot(10, Team Of(Event Player)), Position Of(Event Player) + Vector(0, 5, 1), False);
		Start Facing(Players In Slot(10, Team Of(Event Player)), Direction Towards(Players In Slot(10, Team Of(Event Player)),
			Event Player), 1000, To World, Direction and Turn Rate);
		Set Invisible(Players In Slot(10, Team Of(Event Player)), All);
		Wait(0.500, Ignore Condition);
		Press Button(Players In Slot(10, Team Of(Event Player)), Button(Ultimate));
		Wait(10, Ignore Condition);
		Destroy Dummy Bot(Team Of(Event Player), 10);
	}
}
